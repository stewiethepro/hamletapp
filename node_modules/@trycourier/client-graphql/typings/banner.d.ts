import { Client } from "urql";
import { ICourierClientParams } from "./types";
export interface IGetBannerParams {
    from?: number;
    limit?: number;
    locale?: string;
    tags?: string[];
}
export declare const QUERY_BANNER = "\n  query GetBanners($params: BannerParamsInput, $limit: Int = 10, $after: String){\n    banners(params: $params, limit: $limit, after: $after) {\n      totalCount\n      pageInfo {\n        startCursor\n        hasNextPage\n      }\n      nodes {\n        id\n        userId\n        messageId\n        created\n        tags\n        content {\n          title\n          body\n          blocks {\n            ... on TextBlock {\n              type\n              text\n            }\n            ... on ActionBlock {\n              type\n              text\n              url\n            }\n          }\n          data\n        }\n      }\n    }\n  }\n";
declare type GetBanners = (params?: IGetBannerParams, after?: string) => Promise<{
    startCursor: string;
    banners: any[];
} | undefined>;
export declare const getBanners: (client?: Client | undefined) => GetBanners;
declare const _default: (params: ICourierClientParams | {
    client: Client;
}) => {
    getBanners: GetBanners;
};
export default _default;
//# sourceMappingURL=banner.d.ts.map