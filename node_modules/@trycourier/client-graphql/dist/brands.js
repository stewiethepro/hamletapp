"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.getBrand = exports.brandProps = void 0;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _client = require("./client");

var brandProps = "\nsettings {\n  colors {\n    primary\n    secondary\n    tertiary\n  }\n  inapp {\n    borderRadius\n    disableMessageIcon\n    disableCourierFooter\n    placement\n    emptyState {\n      textColor\n      text\n    }\n    widgetBackground {\n      topColor\n      bottomColor\n    }\n    colors {\n      invertHeader\n      invertButtons\n    }\n    icons {\n      bell\n      message\n    }\n    toast {\n      timerAutoClose\n      borderRadius\n    }\n  }\n}\npreferenceTemplates {\n  nodes {\n    defaultStatus\n    templateName\n    templateId\n  }\n}\n";
exports.brandProps = brandProps;
var GET_BRAND = "\nquery GetBrand($brandId: String!) {\n  brand(brandId: $brandId) {\n    ".concat(brandProps, "\n  }\n}\n");
var GET_INAPP_BRAND = "\nquery GetInAppBrand {\n  inAppBrand {\n    ".concat(brandProps, "\n  }\n}\n");

var getBrand = function getBrand(client) {
  return /*#__PURE__*/function () {
    var _ref = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee(brandId) {
      var _results$data, _brand$settings, _brand$settings2, _brand$preferenceTemp;

      var results, brandProp, brand, colors, inapp, preferenceTemplates;
      return _regenerator["default"].wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              if (client) {
                _context.next = 2;
                break;
              }

              return _context.abrupt("return", Promise.resolve(undefined));

            case 2:
              if (!brandId) {
                _context.next = 8;
                break;
              }

              _context.next = 5;
              return client.query(GET_BRAND, {
                brandId: brandId
              }).toPromise();

            case 5:
              _context.t0 = _context.sent;
              _context.next = 11;
              break;

            case 8:
              _context.next = 10;
              return client.query(GET_INAPP_BRAND).toPromise();

            case 10:
              _context.t0 = _context.sent;

            case 11:
              results = _context.t0;
              brandProp = brandId ? "brand" : "inAppBrand";
              brand = results === null || results === void 0 ? void 0 : (_results$data = results.data) === null || _results$data === void 0 ? void 0 : _results$data[brandProp];
              colors = brand === null || brand === void 0 ? void 0 : (_brand$settings = brand.settings) === null || _brand$settings === void 0 ? void 0 : _brand$settings.colors;
              inapp = brand === null || brand === void 0 ? void 0 : (_brand$settings2 = brand.settings) === null || _brand$settings2 === void 0 ? void 0 : _brand$settings2.inapp;
              preferenceTemplates = brand === null || brand === void 0 ? void 0 : (_brand$preferenceTemp = brand.preferenceTemplates) === null || _brand$preferenceTemp === void 0 ? void 0 : _brand$preferenceTemp.nodes;
              return _context.abrupt("return", {
                colors: colors,
                inapp: inapp,
                preferenceTemplates: preferenceTemplates
              });

            case 18:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));

    return function (_x) {
      return _ref.apply(this, arguments);
    };
  }();
};

exports.getBrand = getBrand;

var _default = function _default(params) {
  var client = (0, _client.createCourierClient)(params);
  return {
    getBrand: getBrand(client)
  };
};

exports["default"] = _default;