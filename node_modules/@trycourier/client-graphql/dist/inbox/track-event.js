"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.trackEvent = exports.getTrackEventQuery = void 0;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var getTrackEventQuery = function getTrackEventQuery(eventType) {
  return "\n  mutation TrackEvent(\n    $messageId: String!\n  ) {\n    ".concat(eventType, "(messageId: $messageId)\n  }\n");
};

exports.getTrackEventQuery = getTrackEventQuery;

var trackEvent = function trackEvent(client) {
  return function (eventType) {
    return /*#__PURE__*/function () {
      var _ref = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee(messageId) {
        var _results$data;

        var QUERY, results, status;
        return _regenerator["default"].wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                if (client) {
                  _context.next = 2;
                  break;
                }

                return _context.abrupt("return", Promise.resolve(undefined));

              case 2:
                QUERY = getTrackEventQuery(eventType);
                _context.next = 5;
                return client.query(QUERY, {
                  messageId: messageId
                }).toPromise();

              case 5:
                results = _context.sent;
                status = results === null || results === void 0 ? void 0 : (_results$data = results.data) === null || _results$data === void 0 ? void 0 : _results$data[eventType];
                return _context.abrupt("return", (0, _defineProperty2["default"])({}, eventType, status));

              case 8:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));

      return function (_x) {
        return _ref.apply(this, arguments);
      };
    }();
  };
};

exports.trackEvent = trackEvent;