"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getInboxCount = exports.GET_INBOX_COUNT = void 0;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var GET_INBOX_COUNT = "\n  query GetInboxCount($params: FilterParamsInput) {\n    count(params: $params)\n  }\n";
exports.GET_INBOX_COUNT = GET_INBOX_COUNT;

var getInboxCount = function getInboxCount(client) {
  return /*#__PURE__*/function () {
    var _ref = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee(params) {
      var results;
      return _regenerator["default"].wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              if (client) {
                _context.next = 2;
                break;
              }

              return _context.abrupt("return", Promise.resolve());

            case 2:
              _context.next = 4;
              return client.query(GET_INBOX_COUNT, {
                params: params
              }).toPromise();

            case 4:
              results = _context.sent;
              return _context.abrupt("return", results === null || results === void 0 ? void 0 : results.data);

            case 6:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));

    return function (_x) {
      return _ref.apply(this, arguments);
    };
  }();
};

exports.getInboxCount = getInboxCount;