"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getInboxMessages = exports.GET_INBOX_MESSAGES = void 0;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var GET_INBOX_MESSAGES = "\n  query GetInboxMessages($params: FilterParamsInput, $limit: Int = 10, $after: String){\n    messages(params: $params, limit: $limit, after: $after) {\n      totalCount\n      pageInfo {\n        startCursor\n        hasNextPage\n      }\n      nodes {\n        preview\n        messageId\n        read\n        created\n      }\n    }\n  }\n";
exports.GET_INBOX_MESSAGES = GET_INBOX_MESSAGES;

var getInboxMessages = function getInboxMessages(client) {
  return /*#__PURE__*/function () {
    var _ref = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee(params, after) {
      var _results$data, _results$data$message, _results$data2, _results$data2$messag, _results$data2$messag2;

      var _ref2, limit, restParams, results, messages, startCursor;

      return _regenerator["default"].wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              if (client) {
                _context.next = 2;
                break;
              }

              return _context.abrupt("return", Promise.resolve(undefined));

            case 2:
              _ref2 = params !== null && params !== void 0 ? params : {}, limit = _ref2.limit, restParams = (0, _objectWithoutProperties2["default"])(_ref2, ["limit"]);
              _context.next = 5;
              return client.query(GET_INBOX_MESSAGES, {
                after: after,
                limit: limit,
                params: restParams
              }).toPromise();

            case 5:
              results = _context.sent;
              messages = results === null || results === void 0 ? void 0 : (_results$data = results.data) === null || _results$data === void 0 ? void 0 : (_results$data$message = _results$data.messages) === null || _results$data$message === void 0 ? void 0 : _results$data$message.nodes;
              startCursor = results === null || results === void 0 ? void 0 : (_results$data2 = results.data) === null || _results$data2 === void 0 ? void 0 : (_results$data2$messag = _results$data2.messages) === null || _results$data2$messag === void 0 ? void 0 : (_results$data2$messag2 = _results$data2$messag.pageInfo) === null || _results$data2$messag2 === void 0 ? void 0 : _results$data2$messag2.startCursor;
              return _context.abrupt("return", {
                appendMessages: Boolean(after),
                messages: messages,
                startCursor: startCursor
              });

            case 9:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));

    return function (_x, _x2) {
      return _ref.apply(this, arguments);
    };
  }();
};

exports.getInboxMessages = getInboxMessages;