"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getInboxMessage = exports.GET_INBOX_MESSAGE = void 0;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var GET_INBOX_MESSAGE = "\n  query GetInboxMessage($messageId: String!){\n    message(messageId: $messageId) {\n      created\n      messageId\n      read\n      content {\n        html\n        elemental {\n          ... on TextElement {\n            type\n            content\n          }\n          ... on ActionElement {\n            type\n            content\n            href\n          }\n        }\n      }\n    }\n  }\n";
exports.GET_INBOX_MESSAGE = GET_INBOX_MESSAGE;

var getInboxMessage = function getInboxMessage(client) {
  return /*#__PURE__*/function () {
    var _ref = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee(messageId) {
      var _results$data;

      var results, message;
      return _regenerator["default"].wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              if (client) {
                _context.next = 2;
                break;
              }

              return _context.abrupt("return", Promise.resolve(undefined));

            case 2:
              _context.next = 4;
              return client.query(GET_INBOX_MESSAGE, {
                messageId: messageId
              }).toPromise();

            case 4:
              results = _context.sent;
              message = results === null || results === void 0 ? void 0 : (_results$data = results.data) === null || _results$data === void 0 ? void 0 : _results$data.message;
              return _context.abrupt("return", {
                message: message
              });

            case 7:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));

    return function (_x) {
      return _ref.apply(this, arguments);
    };
  }();
};

exports.getInboxMessage = getInboxMessage;