"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _reactProvider = require("@trycourier/react-provider");

var _deepExtend = _interopRequireDefault(require("deep-extend"));

var _react = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireWildcard(require("styled-components"));

var _reactHooks = require("@trycourier/react-hooks");

var _hooks = require("../../hooks");

var _Bell = _interopRequireWildcard(require("./Bell"));

var _LazyTippy = _interopRequireDefault(require("./LazyTippy"));

var _Messages = _interopRequireDefault(require("../Messages"));

var _TippyGlobalStyle = _interopRequireDefault(require("./TippyGlobalStyle"));

var _constants = require("../../constants");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var UnreadIndicator = _styledComponents["default"].div.withConfig({
  displayName: "Inbox__UnreadIndicator",
  componentId: "sc-1wwns2l-0"
})(function (_ref) {
  var _theme$brand$colors$p, _theme$brand, _theme$brand$colors;

  var theme = _ref.theme,
      showUnreadMessageCount = _ref.showUnreadMessageCount;
  return (0, _deepExtend["default"])({
    color: "white",
    fontSize: 11,
    position: "absolute",
    background: (_theme$brand$colors$p = theme === null || theme === void 0 ? void 0 : (_theme$brand = theme.brand) === null || _theme$brand === void 0 ? void 0 : (_theme$brand$colors = _theme$brand.colors) === null || _theme$brand$colors === void 0 ? void 0 : _theme$brand$colors.primary) !== null && _theme$brand$colors$p !== void 0 ? _theme$brand$colors$p : "#de5063",
    animation: "badge-pulse 10s infinite"
  }, showUnreadMessageCount ? {
    top: -4,
    borderRadius: 17,
    padding: "0 4px",
    height: 16,
    left: 12,
    textAlign: "center",
    minWidth: 8
  } : {
    top: -2,
    right: 0,
    borderRadius: "100%",
    padding: 5
  }, theme.unreadIndicator);
});

var StyledTippy = (0, _styledComponents["default"])(_LazyTippy["default"]).withConfig({
  displayName: "Inbox__StyledTippy",
  componentId: "sc-1wwns2l-1"
})(function (_ref2) {
  var _theme$brand$inapp$bo, _theme$brand2, _theme$brand2$inapp;

  var theme = _ref2.theme,
      placement = _ref2.placement;
  return (0, _deepExtend["default"])({
    fontFamily: "'Nunito Sans', sans-serif",
    boxShadow: "0px 12px 32px rgba(86, 43, 85, 0.3)",
    width: "483px",
    maxWidth: "initial !important",
    borderRadius: (_theme$brand$inapp$bo = theme === null || theme === void 0 ? void 0 : (_theme$brand2 = theme.brand) === null || _theme$brand2 === void 0 ? void 0 : (_theme$brand2$inapp = _theme$brand2.inapp) === null || _theme$brand2$inapp === void 0 ? void 0 : _theme$brand2$inapp.borderRadius) !== null && _theme$brand$inapp$bo !== void 0 ? _theme$brand$inapp$bo : "24px",
    outline: "none",
    overflow: "hidden",
    margin: ["left", "right"].includes(String(placement)) ? "24px 0" : "0 24px",
    ".tippy-content": {
      padding: 0,
      display: "flex",
      flexDirection: "column",
      "&, *": {
        boxSizing: "border-box"
      }
    }
  }, theme.root);
});

var Inbox = function Inbox(props) {
  var _propTabs$, _props$isOpen, _ref3, _props$placement, _brand$inapp;

  var ref = (0, _react.useRef)(null);
  var courierContext = (0, _reactProvider.useCourier)();

  if (!courierContext) {
    throw new Error("Missing Courier Provider");
  } // set defaults


  props = (0, _react.useMemo)(function () {
    return _objectSpread({
      openLinksInNewTab: true,
      tabs: _constants.DEFAULT_TABS
    }, props);
  }, [props]);
  var propTabs = props.tabs === false ? undefined : props.tabs;
  var currentTab = (_propTabs$ = propTabs === null || propTabs === void 0 ? void 0 : propTabs[0]) !== null && _propTabs$ !== void 0 ? _propTabs$ : _constants.DEFAULT_TABS === null || _constants.DEFAULT_TABS === void 0 ? void 0 : _constants.DEFAULT_TABS[0];
  var windowSize = (0, _hooks.useWindowSize)();

  var _useInbox = (0, _reactHooks.useInbox)(),
      brand = _useInbox.brand,
      fetchMessageLists = _useInbox.fetchMessageLists,
      fetchMessages = _useInbox.fetchMessages,
      init = _useInbox.init,
      isOpenState = _useInbox.isOpen,
      setCurrentTab = _useInbox.setCurrentTab,
      setView = _useInbox.setView,
      tabs = _useInbox.tabs,
      toggleInbox = _useInbox.toggleInbox,
      _useInbox$unreadMessa = _useInbox.unreadMessageCount,
      unreadMessageCount = _useInbox$unreadMessa === void 0 ? 0 : _useInbox$unreadMessa;

  var isOpen = (_props$isOpen = props.isOpen) !== null && _props$isOpen !== void 0 ? _props$isOpen : isOpenState;
  var tippyProps = {
    visible: isOpen,
    placement: (_ref3 = (_props$placement = props.placement) !== null && _props$placement !== void 0 ? _props$placement : brand === null || brand === void 0 ? void 0 : (_brand$inapp = brand.inapp) === null || _brand$inapp === void 0 ? void 0 : _brand$inapp.placement) !== null && _ref3 !== void 0 ? _ref3 : "right",
    interactive: true
  };
  (0, _react.useEffect)(function () {
    init({
      brand: props.brand,
      isOpen: props.isOpen,
      tabs: propTabs
    });
  }, [props.brand, props.isOpen, propTabs]);
  (0, _hooks.useLocalStorageMessages)(courierContext.clientKey, courierContext.userId);
  var handleIconOnClick = (0, _react.useCallback)(function (event) {
    event.preventDefault();
    var myCurrentTab = currentTab;

    if (!isOpen) {
      var _tabs$;

      setView("messages");
      myCurrentTab = (_tabs$ = tabs === null || tabs === void 0 ? void 0 : tabs[0]) !== null && _tabs$ !== void 0 ? _tabs$ : _constants.DEFAULT_TABS[1];
      setCurrentTab(myCurrentTab);
    }

    if (tabs) {
      fetchMessageLists(tabs);
    } else {
      fetchMessages({
        params: myCurrentTab.filters
      });
    }

    toggleInbox();
  }, [tabs, isOpen, setView, setCurrentTab]);
  var handleClickOutside = (0, _react.useCallback)(function (event) {
    if (!isOpen || event.target.closest(".inbox-bell")) {
      return;
    } // prop is overriding our state


    if (props.isOpen) {
      return;
    }

    toggleInbox(false);
  }, [isOpen]);
  (0, _hooks.useEventListener)("keydown", function (event) {
    if ((event === null || event === void 0 ? void 0 : event.key) === "Escape" && isOpen) {
      toggleInbox(false);
    }
  });
  var bell = (0, _react.useMemo)(function () {
    var _props$className, _brand$inapp2, _brand$inapp2$icons, _brand$inapp3, _brand$inapp3$icons;

    return /*#__PURE__*/_react["default"].createElement(_Bell.Bell, {
      "aria-pressed": "false",
      "data-testid": "bell",
      className: "inbox-bell ".concat((_props$className = props.className) !== null && _props$className !== void 0 ? _props$className : ""),
      isOpen: isOpen !== null && isOpen !== void 0 ? isOpen : false,
      onClick: handleIconOnClick,
      role: "button",
      tabIndex: 0
    }, props.renderIcon ? /*#__PURE__*/_react["default"].createElement("span", null, props.renderIcon({
      unreadMessageCount: unreadMessageCount,
      isOpen: isOpen !== null && isOpen !== void 0 ? isOpen : false
    })) : brand !== null && brand !== void 0 && (_brand$inapp2 = brand.inapp) !== null && _brand$inapp2 !== void 0 && (_brand$inapp2$icons = _brand$inapp2.icons) !== null && _brand$inapp2$icons !== void 0 && _brand$inapp2$icons.bell ? /*#__PURE__*/_react["default"].createElement("img", {
      src: brand === null || brand === void 0 ? void 0 : (_brand$inapp3 = brand.inapp) === null || _brand$inapp3 === void 0 ? void 0 : (_brand$inapp3$icons = _brand$inapp3.icons) === null || _brand$inapp3$icons === void 0 ? void 0 : _brand$inapp3$icons.bell
    }) : /*#__PURE__*/_react["default"].createElement(_Bell["default"], null), unreadMessageCount > 0 && /*#__PURE__*/_react["default"].createElement(UnreadIndicator, {
      showUnreadMessageCount: props.showUnreadMessageCount,
      "data-testid": "unread-badge"
    }, props.showUnreadMessageCount ? unreadMessageCount > 99 ? "99+" : unreadMessageCount : undefined));
  }, [props, brand, isOpen, handleIconOnClick]);
  (0, _hooks.useClickOutside)(ref, handleClickOutside);

  if (!(courierContext !== null && courierContext !== void 0 && courierContext.inbox)) {
    return null;
  }

  var isMobile = windowSize !== null && windowSize !== void 0 && windowSize.width ? (windowSize === null || windowSize === void 0 ? void 0 : windowSize.width) <= 480 : false;

  var BellWrapper = function BellWrapper() {
    var _props$renderBell, _props$className2;

    return props.renderBell ? (_props$renderBell = props.renderBell({
      className: "inbox-bell ".concat((_props$className2 = props.className) !== null && _props$className2 !== void 0 ? _props$className2 : ""),
      isOpen: isOpen !== null && isOpen !== void 0 ? isOpen : false,
      onClick: handleIconOnClick
    })) !== null && _props$renderBell !== void 0 ? _props$renderBell : bell : bell;
  };

  return /*#__PURE__*/_react["default"].createElement(_react["default"].Fragment, null, /*#__PURE__*/_react["default"].createElement(_TippyGlobalStyle["default"], null), /*#__PURE__*/_react["default"].createElement(_styledComponents.ThemeProvider, {
    theme: _objectSpread(_objectSpread({}, props.theme), {}, {
      brand: brand
    })
  }, tippyProps.visible ? /*#__PURE__*/_react["default"].createElement(_react["default"].Fragment, null, isMobile ? /*#__PURE__*/_react["default"].createElement(_Messages["default"], (0, _extends2["default"])({
    ref: ref,
    isMobile: true
  }, props)) : /*#__PURE__*/_react["default"].createElement(StyledTippy, (0, _extends2["default"])({}, tippyProps, {
    content: /*#__PURE__*/_react["default"].createElement(_Messages["default"], (0, _extends2["default"])({
      ref: ref
    }, props))
  }), BellWrapper())) : BellWrapper()));
};

var _default = Inbox;
exports["default"] = _default;