"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.SettingsIconButton = void 0;

var _react = _interopRequireDefault(require("react"));

var _styled = require("./styled");

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _reactHooks = require("@trycourier/react-hooks");

var _reactProvider = require("@trycourier/react-provider");

var SettingsSvg = function SettingsSvg(props) {
  return /*#__PURE__*/_react["default"].createElement("svg", props, /*#__PURE__*/_react["default"].createElement("rect", {
    x: ".5",
    y: ".5",
    width: "25",
    height: "25",
    rx: "3.5",
    stroke: "#E4DFF0"
  }), /*#__PURE__*/_react["default"].createElement("path", {
    stroke: "#73819B",
    strokeWidth: "1.837",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    d: "M6.919 10.081h12.162M6.919 15.581h12.162"
  }), /*#__PURE__*/_react["default"].createElement("circle", {
    cx: "16.5",
    cy: "10",
    r: "1.919",
    fill: "#fff",
    stroke: "#73819B",
    strokeWidth: "1.837",
    strokeLinecap: "round",
    strokeLinejoin: "round"
  }), /*#__PURE__*/_react["default"].createElement("circle", {
    cx: "10",
    cy: "16",
    r: "1.919",
    fill: "#fff",
    stroke: "#73819B",
    strokeWidth: "1.837",
    strokeLinecap: "round",
    strokeLinejoin: "round"
  }));
};

SettingsSvg.defaultProps = {
  width: "26",
  height: "26",
  fill: "none",
  xmlns: "http://www.w3.org/2000/svg"
};

var SettingsIconButton = _styledComponents["default"].button.withConfig({
  displayName: "Header__SettingsIconButton",
  componentId: "sc-8mczhc-0"
})(["display:flex;flex-direction:column;align-items:flex-end;outline:none;border:none;padding:0;background:transparent;margin-right:-15px;padding:0 12px;cursor:pointer;"]);

exports.SettingsIconButton = SettingsIconButton;

var Header = function Header(_ref) {
  var _currentTab$filters, _labels$markAllAsRead, _brand$preferenceTemp, _labels$backToInbox;

  var currentTab = _ref.currentTab,
      labels = _ref.labels,
      markAllAsRead = _ref.markAllAsRead,
      _ref$messages = _ref.messages,
      messages = _ref$messages === void 0 ? [] : _ref$messages,
      title = _ref.title,
      unreadMessageCount = _ref.unreadMessageCount;

  var _useCourier = (0, _reactProvider.useCourier)(),
      brand = _useCourier.brand;

  var _useInbox = (0, _reactHooks.useInbox)(),
      view = _useInbox.view,
      setView = _useInbox.setView,
      tabs = _useInbox.tabs;

  var handleSetView = function handleSetView(newView) {
    return function (event) {
      event.preventDefault();
      setView(newView);
    };
  };

  return view === "messages" ? /*#__PURE__*/_react["default"].createElement(_styled.Container, {
    "data-testid": "header"
  }, /*#__PURE__*/_react["default"].createElement(_styled.Heading, {
    alignItems: "center"
  }, title, unreadMessageCount ? /*#__PURE__*/_react["default"].createElement("span", {
    className: "message-count"
  }, unreadMessageCount > 99 ? "99+" : unreadMessageCount) : undefined), /*#__PURE__*/_react["default"].createElement("div", {
    className: "actions"
  }, ((currentTab === null || currentTab === void 0 ? void 0 : (_currentTab$filters = currentTab.filters) === null || _currentTab$filters === void 0 ? void 0 : _currentTab$filters.isRead) === false && messages.length > 0 || tabs === undefined) && /*#__PURE__*/_react["default"].createElement(_styled.MarkAllAsRead, {
    onClick: markAllAsRead,
    style: {
      cursor: "pointer"
    }
  }, (_labels$markAllAsRead = labels === null || labels === void 0 ? void 0 : labels.markAllAsRead) !== null && _labels$markAllAsRead !== void 0 ? _labels$markAllAsRead : "Mark all as read"), (brand === null || brand === void 0 ? void 0 : (_brand$preferenceTemp = brand.preferenceTemplates) === null || _brand$preferenceTemp === void 0 ? void 0 : _brand$preferenceTemp.length) > 0 && /*#__PURE__*/_react["default"].createElement(SettingsIconButton, {
    onClick: handleSetView("preferences")
  }, /*#__PURE__*/_react["default"].createElement(SettingsSvg, null)))) : /*#__PURE__*/_react["default"].createElement(_styled.Container, {
    "data-testid": "header",
    view: "preferences"
  }, /*#__PURE__*/_react["default"].createElement(_styled.Heading, {
    flexDirection: "column"
  }, "Preferences", /*#__PURE__*/_react["default"].createElement(_styled.PreferenceSubHeader, {
    onClick: handleSetView("messages")
  }, "\u25C0 ".concat((_labels$backToInbox = labels === null || labels === void 0 ? void 0 : labels.backToInbox) !== null && _labels$backToInbox !== void 0 ? _labels$backToInbox : "Back to Inbox"))), /*#__PURE__*/_react["default"].createElement(SettingsIconButton, {
    onClick: handleSetView("messages")
  }, /*#__PURE__*/_react["default"].createElement(SettingsSvg, null)));
};

var _default = Header;
exports["default"] = _default;