"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _reactProvider = require("@trycourier/react-provider");

var _clientGraphql = require("@trycourier/client-graphql");

var usePreferencesActions = function usePreferencesActions() {
  var _useCourier = (0, _reactProvider.useCourier)(),
      apiUrl = _useCourier.apiUrl,
      clientKey = _useCourier.clientKey,
      userId = _useCourier.userId,
      userSignature = _useCourier.userSignature,
      dispatch = _useCourier.dispatch;

  var courierClient = (0, _clientGraphql.createCourierClient)({
    apiUrl: apiUrl,
    clientKey: clientKey,
    userId: userId,
    userSignature: userSignature
  });
  var preferences = (0, _clientGraphql.Preferences)({
    client: courierClient
  });
  return {
    fetchRecipientPreferences: function fetchRecipientPreferences() {
      dispatch({
        type: "preferences/FETCH_RECIPIENT_PREFERENCES",
        payload: function payload() {
          return preferences.getRecipientPreferences();
        }
      });
    },
    updateRecipientPreferences: function () {
      var _updateRecipientPreferences = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee(_payload) {
        return _regenerator["default"].wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                dispatch({
                  type: "preferences/UPDATE_RECIPIENT_PREFERENCES",
                  payload: function payload() {
                    return preferences.updateRecipientPreferences(_payload);
                  }
                });

              case 1:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));

      function updateRecipientPreferences(_x) {
        return _updateRecipientPreferences.apply(this, arguments);
      }

      return updateRecipientPreferences;
    }()
  };
};

var _default = usePreferencesActions;
exports["default"] = _default;