import { IGetMessagesParams, IGraphMessageResponse } from "@trycourier/client-graphql";
export declare const INBOX_FETCH_MESSAGES = "inbox/FETCH_MESSAGES";
export declare const INBOX_FETCH_MESSAGES_PENDING = "inbox/FETCH_MESSAGES/PENDING";
export declare type FetchMessagesPending = {
    type: "inbox/FETCH_MESSAGES/PENDING";
};
export declare const fetchMessagesPending: () => FetchMessagesPending;
export declare const INBOX_FETCH_MESSAGES_ERROR = "inbox/FETCH_MESSAGES/ERROR";
export declare type FetchMessagesError = {
    type: "inbox/FETCH_MESSAGES/ERROR";
};
export declare const fetchMessagesError: () => FetchMessagesError;
export declare const INBOX_FETCH_MESSAGES_DONE = "inbox/FETCH_MESSAGES/DONE";
interface FetchMessagesDonePayload {
    messages: IGraphMessageResponse[];
    appendMessages?: boolean;
    startCursor?: string;
}
export declare type FetchMessagesDone = {
    type: "inbox/FETCH_MESSAGES/DONE";
    meta: {
        tabId?: string;
        searchParams: {
            from?: string;
            filters: IGetMessagesParams;
        };
    };
    payload: FetchMessagesDonePayload;
};
export declare const fetchMessagesDone: (payload: FetchMessagesDonePayload, meta: FetchMessagesDone["meta"]) => FetchMessagesDone;
export {};
//# sourceMappingURL=fetch-messages.d.ts.map