import { IGraphMessageResponse } from "@trycourier/client-graphql";
import { IMessage, IInbox } from "./types";
import { InboxInit } from "./actions/init";
import { InboxSetView } from "./actions/set-view";
import { ToggleInbox } from "./actions/toggle-inbox";
import { MarkAllRead } from "./actions/mark-all-read";
import { NewMessage } from "./actions/new-message";
import { Rehydratemessages } from "./actions/rehydrate-messages";
import { MarkMessageArchived } from "./actions/mark-message-archived";
import { MarkMessageRead } from "./actions/mark-message-read";
import { MarkMessageUnread } from "./actions/mark-message-unread";
import { FetchUnreadMessageCountDone } from "./actions/fetch-unread-message-count";
import { FetchMessagesDone, FetchMessagesError, FetchMessagesPending } from "./actions/fetch-messages";
import { FetchMessageListsDone, FetchMessageListsError, FetchMessageListsPending } from "./actions/fetch-message-lists";
import { SetCurrentTab } from "./actions/set-current-tab";
export declare const mapMessage: (message: IGraphMessageResponse) => IMessage;
export declare const initialState: IInbox;
declare type InboxAction = FetchMessageListsDone | FetchMessageListsError | FetchMessageListsPending | FetchMessagesDone | FetchMessagesError | FetchMessagesPending | FetchUnreadMessageCountDone | InboxInit | InboxSetView | MarkAllRead | Rehydratemessages | MarkMessageArchived | MarkMessageRead | MarkMessageUnread | NewMessage | SetCurrentTab | ToggleInbox;
declare const _default: (state?: IInbox, action?: InboxAction | undefined) => IInbox;
export default _default;
//# sourceMappingURL=reducer.d.ts.map