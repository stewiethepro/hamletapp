"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/supabase/profiles/get";
exports.ids = ["pages/api/supabase/profiles/get"];
exports.modules = {

/***/ "@supabase/supabase-js":
/*!****************************************!*\
  !*** external "@supabase/supabase-js" ***!
  \****************************************/
/***/ ((module) => {

module.exports = require("@supabase/supabase-js");

/***/ }),

/***/ "(api)/./pages/api/supabase/profiles/get.js":
/*!********************************************!*\
  !*** ./pages/api/supabase/profiles/get.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _utils_supabase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/utils/supabase */ \"(api)/./utils/supabase.js\");\n\nconst serviceSupabase = (0,_utils_supabase__WEBPACK_IMPORTED_MODULE_0__.getServiceSupabase)();\nconst handler = async (req, res)=>{\n    const userResult = [];\n    const userRequest = req.query;\n    const host = req.headers.host;\n    // error handling\n    // if (host != 'dev.stayhamlet.com') {\n    //    return res.status(404).json({ error: \"401 Unauthorized - client failed to authenticate with the server\" });\n    // }\n    if (Object.values(userRequest).length === 0) {\n        return res.status(404).json({\n            error: \"400 Invalid - invalid request, no query\"\n        });\n    }\n    console.log(\"userRequest on server: \", userRequest);\n    const emailsToCheck = Object.values(userRequest);\n    console.log(\"emailsToCheck: \", emailsToCheck);\n    const checkUser = async (email)=>{\n        let userExists = false;\n        let userId = null;\n        let userStatus = null;\n        let userLastName = null;\n        let userBudget = 0;\n        const { data: profile , error  } = await serviceSupabase.from(\"profiles\").select(\"*\").eq(\"email\", email);\n        if (error) {\n            console.log(\"Supabase error:\", error);\n            return error;\n        } else {\n            if (profile.length === 0) {\n                console.log(\"no profile\");\n            } else {\n                console.log(\"profile found\");\n                userExists = true;\n                userId = profile[0].id;\n                userStatus = profile[0].status;\n                userLastName = profile[0].last_name;\n                userBudget = profile[0].budget;\n            }\n            const result = {\n                email: email,\n                userExists: userExists,\n                userId: userId,\n                userStatus: userStatus,\n                lastName: userLastName,\n                budget: userBudget\n            };\n            console.log(\"profile: \", profile);\n            console.log(\"result: \", result);\n            return result;\n        }\n    };\n    const checkEmails = async (emailsToCheck)=>{\n        const emails = emailsToCheck;\n        console.log(\"for loop started\");\n        for (let email of emails){\n            console.log(\"check user inside for loop started\");\n            const result = await checkUser(email);\n            userResult.push(result);\n            console.log(\"check user inside for loop returned\");\n        }\n        console.log(\"for loop finished\");\n        console.log(\"finalResult:\", userResult);\n        return userResult;\n    };\n    try {\n        const data = await checkEmails(emailsToCheck);\n        res.status(200).json(data);\n    } catch (error) {\n        res.status(500).json({\n            error: error,\n            message: error.message\n        });\n    }\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (handler);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9wYWdlcy9hcGkvc3VwYWJhc2UvcHJvZmlsZXMvZ2V0LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXNEO0FBRXRELE1BQU1DLGVBQWUsR0FBR0QsbUVBQWtCLEVBQUU7QUFFNUMsTUFBTUUsT0FBTyxHQUFHLE9BQU9DLEdBQUcsRUFBRUMsR0FBRyxHQUFLO0lBQ2hDLE1BQU1DLFVBQVUsR0FBRyxFQUFFO0lBQ3JCLE1BQU1DLFdBQVcsR0FBR0gsR0FBRyxDQUFDSSxLQUFLO0lBQzdCLE1BQU1DLElBQUksR0FBR0wsR0FBRyxDQUFDTSxPQUFPLENBQUNELElBQUk7SUFFN0IsaUJBQWlCO0lBRWpCLHNDQUFzQztJQUN0QyxpSEFBaUg7SUFDakgsSUFBSTtJQUVKLElBQUlFLE1BQU0sQ0FBQ0MsTUFBTSxDQUFDTCxXQUFXLENBQUMsQ0FBQ00sTUFBTSxLQUFLLENBQUMsRUFBRTtRQUN6QyxPQUFPUixHQUFHLENBQUNTLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQ0MsSUFBSSxDQUFDO1lBQUVDLEtBQUssRUFBRSx5Q0FBeUM7U0FBRSxDQUFDLENBQUM7S0FDckY7SUFFREMsT0FBTyxDQUFDQyxHQUFHLENBQUMseUJBQXlCLEVBQUVYLFdBQVcsQ0FBQztJQUVuRCxNQUFNWSxhQUFhLEdBQUdSLE1BQU0sQ0FBQ0MsTUFBTSxDQUFDTCxXQUFXLENBQUM7SUFDaERVLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLGlCQUFpQixFQUFFQyxhQUFhLENBQUM7SUFFN0MsTUFBTUMsU0FBUyxHQUFHLE9BQU9DLEtBQUssR0FBSztRQUMvQixJQUFJQyxVQUFVLEdBQUcsS0FBSztRQUN0QixJQUFJQyxNQUFNLEdBQUcsSUFBSTtRQUNqQixJQUFJQyxVQUFVLEdBQUcsSUFBSTtRQUNyQixJQUFJQyxZQUFZLEdBQUcsSUFBSTtRQUN2QixJQUFJQyxVQUFVLEdBQUcsQ0FBQztRQUVsQixNQUFNLEVBQUVDLElBQUksRUFBRUMsT0FBTyxHQUFFWixLQUFLLEdBQUUsR0FBRyxNQUFNZCxlQUFlLENBQ2pEMkIsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUNoQkMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUNYQyxFQUFFLENBQUMsT0FBTyxFQUFFVixLQUFLLENBQUM7UUFFbkIsSUFBSUwsS0FBSyxFQUFFO1lBQ1hDLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLGlCQUFpQixFQUFFRixLQUFLLENBQUM7WUFDckMsT0FBT0EsS0FBSztTQUNYLE1BQU07WUFDSCxJQUFJWSxPQUFPLENBQUNmLE1BQU0sS0FBSyxDQUFDLEVBQUU7Z0JBQ3RCSSxPQUFPLENBQUNDLEdBQUcsQ0FBQyxZQUFZLENBQUMsQ0FBQzthQUM3QixNQUFNO2dCQUNIRCxPQUFPLENBQUNDLEdBQUcsQ0FBQyxlQUFlLENBQUMsQ0FBQztnQkFDN0JJLFVBQVUsR0FBRyxJQUFJO2dCQUNqQkMsTUFBTSxHQUFHSyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUNJLEVBQUU7Z0JBQ3RCUixVQUFVLEdBQUdJLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQ2QsTUFBTTtnQkFDOUJXLFlBQVksR0FBR0csT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDSyxTQUFTO2dCQUNuQ1AsVUFBVSxHQUFHRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUNNLE1BQU07YUFDakM7WUFDTCxNQUFNQyxNQUFNLEdBQUc7Z0JBQUNkLEtBQUssRUFBRUEsS0FBSztnQkFBRUMsVUFBVSxFQUFFQSxVQUFVO2dCQUFFQyxNQUFNLEVBQUVBLE1BQU07Z0JBQUVDLFVBQVUsRUFBRUEsVUFBVTtnQkFBRVksUUFBUSxFQUFFWCxZQUFZO2dCQUFFUyxNQUFNLEVBQUVSLFVBQVU7YUFBQztZQUN6SVQsT0FBTyxDQUFDQyxHQUFHLENBQUMsV0FBVyxFQUFFVSxPQUFPLENBQUMsQ0FBQztZQUNsQ1gsT0FBTyxDQUFDQyxHQUFHLENBQUMsVUFBVSxFQUFFaUIsTUFBTSxDQUFDLENBQUM7WUFDaEMsT0FBT0EsTUFBTTtTQUNaO0tBQ1I7SUFFRCxNQUFNRSxXQUFXLEdBQUcsT0FBTWxCLGFBQWEsR0FBSztRQUN4QyxNQUFNbUIsTUFBTSxHQUFHbkIsYUFBYTtRQUM1QkYsT0FBTyxDQUFDQyxHQUFHLENBQUMsa0JBQWtCLENBQUMsQ0FBQztRQUNoQyxLQUFLLElBQUlHLEtBQUssSUFBSWlCLE1BQU0sQ0FBRTtZQUN0QnJCLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLG9DQUFvQyxDQUFDLENBQUM7WUFDbEQsTUFBTWlCLE1BQU0sR0FBRyxNQUFNZixTQUFTLENBQUNDLEtBQUssQ0FBQztZQUNyQ2YsVUFBVSxDQUFDaUMsSUFBSSxDQUFDSixNQUFNLENBQUM7WUFDdkJsQixPQUFPLENBQUNDLEdBQUcsQ0FBQyxxQ0FBcUMsQ0FBQyxDQUFDO1NBQ3REO1FBQ0RELE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLG1CQUFtQixDQUFDLENBQUM7UUFDakNELE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLGNBQWMsRUFBRVosVUFBVSxDQUFDLENBQUM7UUFDeEMsT0FBT0EsVUFBVSxDQUFDO0tBQ3JCO0lBRUQsSUFBSTtRQUNBLE1BQU1xQixJQUFJLEdBQUcsTUFBTVUsV0FBVyxDQUFDbEIsYUFBYSxDQUFDO1FBQzdDZCxHQUFHLENBQUNTLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQ0MsSUFBSSxDQUFDWSxJQUFJLENBQUM7S0FDN0IsQ0FBQyxPQUFPWCxLQUFLLEVBQUU7UUFDWlgsR0FBRyxDQUFDUyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUNDLElBQUksQ0FBQztZQUFDQyxLQUFLLEVBQUVBLEtBQUs7WUFBRXdCLE9BQU8sRUFBRXhCLEtBQUssQ0FBQ3dCLE9BQU87U0FBQyxDQUFDO0tBQy9EO0NBRUo7QUFFRCxpRUFBZXJDLE9BQU8sRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2hhbWxldC8uL3BhZ2VzL2FwaS9zdXBhYmFzZS9wcm9maWxlcy9nZXQuanM/NGMzNiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXRTZXJ2aWNlU3VwYWJhc2UgfSBmcm9tIFwiQC91dGlscy9zdXBhYmFzZVwiO1xuXG5jb25zdCBzZXJ2aWNlU3VwYWJhc2UgPSBnZXRTZXJ2aWNlU3VwYWJhc2UoKVxuXG5jb25zdCBoYW5kbGVyID0gYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG4gICAgY29uc3QgdXNlclJlc3VsdCA9IFtdXG4gICAgY29uc3QgdXNlclJlcXVlc3QgPSByZXEucXVlcnlcbiAgICBjb25zdCBob3N0ID0gcmVxLmhlYWRlcnMuaG9zdDtcbiAgICBcbiAgICAvLyBlcnJvciBoYW5kbGluZ1xuICAgIFxuICAgIC8vIGlmIChob3N0ICE9ICdkZXYuc3RheWhhbWxldC5jb20nKSB7XG4gICAgLy8gICAgcmV0dXJuIHJlcy5zdGF0dXMoNDA0KS5qc29uKHsgZXJyb3I6IFwiNDAxIFVuYXV0aG9yaXplZCAtIGNsaWVudCBmYWlsZWQgdG8gYXV0aGVudGljYXRlIHdpdGggdGhlIHNlcnZlclwiIH0pO1xuICAgIC8vIH1cbiAgICBcbiAgICBpZiAoT2JqZWN0LnZhbHVlcyh1c2VyUmVxdWVzdCkubGVuZ3RoID09PSAwKSB7XG4gICAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwNCkuanNvbih7IGVycm9yOiBcIjQwMCBJbnZhbGlkIC0gaW52YWxpZCByZXF1ZXN0LCBubyBxdWVyeVwiIH0pO1xuICAgIH0gXG5cbiAgICBjb25zb2xlLmxvZygndXNlclJlcXVlc3Qgb24gc2VydmVyOiAnLCB1c2VyUmVxdWVzdClcbiAgICBcbiAgICBjb25zdCBlbWFpbHNUb0NoZWNrID0gT2JqZWN0LnZhbHVlcyh1c2VyUmVxdWVzdClcbiAgICBjb25zb2xlLmxvZygnZW1haWxzVG9DaGVjazogJywgZW1haWxzVG9DaGVjaylcblxuICAgIGNvbnN0IGNoZWNrVXNlciA9IGFzeW5jIChlbWFpbCkgPT4ge1xuICAgICAgICBsZXQgdXNlckV4aXN0cyA9IGZhbHNlXG4gICAgICAgIGxldCB1c2VySWQgPSBudWxsXG4gICAgICAgIGxldCB1c2VyU3RhdHVzID0gbnVsbFxuICAgICAgICBsZXQgdXNlckxhc3ROYW1lID0gbnVsbFxuICAgICAgICBsZXQgdXNlckJ1ZGdldCA9IDBcbiAgICBcbiAgICAgICAgY29uc3QgeyBkYXRhOiBwcm9maWxlLCBlcnJvciB9ID0gYXdhaXQgc2VydmljZVN1cGFiYXNlXG4gICAgICAgICAgICAuZnJvbShcInByb2ZpbGVzXCIpXG4gICAgICAgICAgICAuc2VsZWN0KCcqJylcbiAgICAgICAgICAgIC5lcSgnZW1haWwnLCBlbWFpbClcbiAgICAgICAgXG4gICAgICAgICAgICBpZiAoZXJyb3IpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiU3VwYWJhc2UgZXJyb3I6XCIsIGVycm9yKVxuICAgICAgICAgICAgcmV0dXJuIGVycm9yXG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGlmIChwcm9maWxlLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIm5vIHByb2ZpbGVcIik7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJwcm9maWxlIGZvdW5kXCIpO1xuICAgICAgICAgICAgICAgICAgICB1c2VyRXhpc3RzID0gdHJ1ZVxuICAgICAgICAgICAgICAgICAgICB1c2VySWQgPSBwcm9maWxlWzBdLmlkXG4gICAgICAgICAgICAgICAgICAgIHVzZXJTdGF0dXMgPSBwcm9maWxlWzBdLnN0YXR1c1xuICAgICAgICAgICAgICAgICAgICB1c2VyTGFzdE5hbWUgPSBwcm9maWxlWzBdLmxhc3RfbmFtZVxuICAgICAgICAgICAgICAgICAgICB1c2VyQnVkZ2V0ID0gcHJvZmlsZVswXS5idWRnZXRcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCByZXN1bHQgPSB7ZW1haWw6IGVtYWlsLCB1c2VyRXhpc3RzOiB1c2VyRXhpc3RzLCB1c2VySWQ6IHVzZXJJZCwgdXNlclN0YXR1czogdXNlclN0YXR1cywgbGFzdE5hbWU6IHVzZXJMYXN0TmFtZSwgYnVkZ2V0OiB1c2VyQnVkZ2V0fVxuICAgICAgICAgICAgY29uc29sZS5sb2coXCJwcm9maWxlOiBcIiwgcHJvZmlsZSk7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcInJlc3VsdDogXCIsIHJlc3VsdCk7XG4gICAgICAgICAgICByZXR1cm4gcmVzdWx0XG4gICAgICAgICAgICB9XG4gICAgfVxuICAgIFxuICAgIGNvbnN0IGNoZWNrRW1haWxzID0gYXN5bmMoZW1haWxzVG9DaGVjaykgPT4ge1xuICAgICAgICBjb25zdCBlbWFpbHMgPSBlbWFpbHNUb0NoZWNrO1xuICAgICAgICBjb25zb2xlLmxvZygnZm9yIGxvb3Agc3RhcnRlZCcpO1xuICAgICAgICBmb3IgKGxldCBlbWFpbCBvZiBlbWFpbHMpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiY2hlY2sgdXNlciBpbnNpZGUgZm9yIGxvb3Agc3RhcnRlZFwiKTtcbiAgICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IGNoZWNrVXNlcihlbWFpbCk7XG4gICAgICAgICAgICB1c2VyUmVzdWx0LnB1c2gocmVzdWx0KVxuICAgICAgICAgICAgY29uc29sZS5sb2coXCJjaGVjayB1c2VyIGluc2lkZSBmb3IgbG9vcCByZXR1cm5lZFwiKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zb2xlLmxvZygnZm9yIGxvb3AgZmluaXNoZWQnKTtcbiAgICAgICAgY29uc29sZS5sb2coXCJmaW5hbFJlc3VsdDpcIiwgdXNlclJlc3VsdCk7XG4gICAgICAgIHJldHVybiB1c2VyUmVzdWx0O1xuICAgIH1cblxuICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCBjaGVja0VtYWlscyhlbWFpbHNUb0NoZWNrKVxuICAgICAgICByZXMuc3RhdHVzKDIwMCkuanNvbihkYXRhKVxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHtlcnJvcjogZXJyb3IsIG1lc3NhZ2U6IGVycm9yLm1lc3NhZ2V9KVxuICAgIH1cbiAgICAgICAgXG59XG5cbmV4cG9ydCBkZWZhdWx0IGhhbmRsZXI7Il0sIm5hbWVzIjpbImdldFNlcnZpY2VTdXBhYmFzZSIsInNlcnZpY2VTdXBhYmFzZSIsImhhbmRsZXIiLCJyZXEiLCJyZXMiLCJ1c2VyUmVzdWx0IiwidXNlclJlcXVlc3QiLCJxdWVyeSIsImhvc3QiLCJoZWFkZXJzIiwiT2JqZWN0IiwidmFsdWVzIiwibGVuZ3RoIiwic3RhdHVzIiwianNvbiIsImVycm9yIiwiY29uc29sZSIsImxvZyIsImVtYWlsc1RvQ2hlY2siLCJjaGVja1VzZXIiLCJlbWFpbCIsInVzZXJFeGlzdHMiLCJ1c2VySWQiLCJ1c2VyU3RhdHVzIiwidXNlckxhc3ROYW1lIiwidXNlckJ1ZGdldCIsImRhdGEiLCJwcm9maWxlIiwiZnJvbSIsInNlbGVjdCIsImVxIiwiaWQiLCJsYXN0X25hbWUiLCJidWRnZXQiLCJyZXN1bHQiLCJsYXN0TmFtZSIsImNoZWNrRW1haWxzIiwiZW1haWxzIiwicHVzaCIsIm1lc3NhZ2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./pages/api/supabase/profiles/get.js\n");

/***/ }),

/***/ "(api)/./utils/supabase.js":
/*!***************************!*\
  !*** ./utils/supabase.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createResidentGroup\": () => (/* binding */ createResidentGroup),\n/* harmony export */   \"getOnboardingStatus\": () => (/* binding */ getOnboardingStatus),\n/* harmony export */   \"getServiceSupabase\": () => (/* binding */ getServiceSupabase),\n/* harmony export */   \"postOnboardingData\": () => (/* binding */ postOnboardingData),\n/* harmony export */   \"supabase\": () => (/* binding */ supabase)\n/* harmony export */ });\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/supabase-js */ \"@supabase/supabase-js\");\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__);\n// utils/supabase.js\n\nconst supabaseServiceKey = process.env.SUPABASE_SERVICE_KEY;\nconst supabase = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(\"https://cijtrwqqphdofjmlvaee.supabase.co\", \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImNpanRyd3FxcGhkb2ZqbWx2YWVlIiwicm9sZSI6ImFub24iLCJpYXQiOjE2NTc2MjQ0NDQsImV4cCI6MTk3MzIwMDQ0NH0.NWwgCaesEAB1YP9ydq_iulwKZYhKeKFMIDuQy7jw-VA\");\nconst getServiceSupabase = ()=>(0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(\"https://cijtrwqqphdofjmlvaee.supabase.co\", supabaseServiceKey);\nconst getOnboardingStatus = async (userId)=>{\n    const supabase = getSupabase(userId);\n    let { data: users1 , error  } = await supabase.from(\"users\").select(\"is_onboarding\").eq(\"user_id\", userId);\n    const onboardingStatus = users1[0].is_onboarding;\n    return onboardingStatus;\n};\nconst postOnboardingData = async (userId, formData)=>{\n    try {\n        const supabase = getSupabase(userId);\n        let { data: users1 , error  } = await supabase.from(\"users\").update({\n            user_type: formData.userType,\n            first_name: formData.firstName,\n            last_name: formData.lastName,\n            is_onboarding: false\n        }).eq(\"user_id\", userId).select();\n    } catch (error1) {\n        console.log(error1);\n        const errorString = JSON.stringify(error1);\n        return res.status(400).json({\n            errorString\n        });\n    }\n    const response = users;\n    return response;\n};\nasync function createResidentGroup(request) {\n    try {\n        const res1 = await fetch(`/api/supabase/resident-groups/create` + \"?\" + new URLSearchParams(request).toString());\n        const data = await res1.json();\n        console.log(\"API result: \", data);\n        return data;\n    } catch (err) {\n        console.log(\"API error: \", err);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi91dGlscy9zdXBhYmFzZS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUEsb0JBQW9CO0FBQ2dDO0FBRXBELE1BQU1DLGtCQUFrQixHQUFHQyxPQUFPLENBQUNDLEdBQUcsQ0FBQ0Msb0JBQW9CO0FBRXBELE1BQU1DLFFBQVEsR0FBR0wsbUVBQVksQ0FDaENFLDBDQUFvQyxFQUNwQ0Esa05BQXlDLENBQzVDO0FBRU0sTUFBTU0sa0JBQWtCLEdBQUcsSUFBTVIsbUVBQVksQ0FDbERFLDBDQUFvQyxFQUNwQ0Qsa0JBQWtCLENBQ25CO0FBRU0sTUFBTVEsbUJBQW1CLEdBQUcsT0FBT0MsTUFBTSxHQUFLO0lBQ25ELE1BQU1MLFFBQVEsR0FBR00sV0FBVyxDQUFDRCxNQUFNLENBQUM7SUFDcEMsSUFBSSxFQUFFRSxJQUFJLEVBQUVDLE1BQUssR0FBRUMsS0FBSyxHQUFFLEdBQUcsTUFBTVQsUUFBUSxDQUN4Q1UsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUNiQyxNQUFNLENBQUMsZUFBZSxDQUFDLENBQ3ZCQyxFQUFFLENBQUMsU0FBUyxFQUFFUCxNQUFNLENBQUM7SUFFdEIsTUFBTVEsZ0JBQWdCLEdBQUdMLE1BQUssQ0FBQyxDQUFDLENBQUMsQ0FBQ00sYUFBYTtJQUUvQyxPQUFPRCxnQkFBZ0I7Q0FDeEI7QUFFSSxNQUFNRSxrQkFBa0IsR0FBRyxPQUFPVixNQUFNLEVBQUVXLFFBQVEsR0FBSztJQUM1RCxJQUFJO1FBQ0YsTUFBTWhCLFFBQVEsR0FBR00sV0FBVyxDQUFDRCxNQUFNLENBQUM7UUFDcEMsSUFBSSxFQUFFRSxJQUFJLEVBQUVDLE1BQUssR0FBRUMsS0FBSyxHQUFFLEdBQUcsTUFBTVQsUUFBUSxDQUN4Q1UsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUNiTyxNQUFNLENBQ0w7WUFDRUMsU0FBUyxFQUFFRixRQUFRLENBQUNHLFFBQVE7WUFDNUJDLFVBQVUsRUFBRUosUUFBUSxDQUFDSyxTQUFTO1lBQzlCQyxTQUFTLEVBQUVOLFFBQVEsQ0FBQ08sUUFBUTtZQUM1QlQsYUFBYSxFQUFFLEtBQUs7U0FDckIsQ0FDRixDQUNBRixFQUFFLENBQUMsU0FBUyxFQUFFUCxNQUFNLENBQUMsQ0FDckJNLE1BQU0sRUFBRTtLQUNaLENBQUMsT0FBT0YsTUFBSyxFQUFFO1FBQ1plLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDaEIsTUFBSyxDQUFDO1FBQ2xCLE1BQU1pQixXQUFXLEdBQUdDLElBQUksQ0FBQ0MsU0FBUyxDQUFDbkIsTUFBSyxDQUFDO1FBQ3pDLE9BQU9vQixHQUFHLENBQUNDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQ0MsSUFBSSxDQUFDO1lBQUVMLFdBQVc7U0FBRSxDQUFDO0tBQy9DO0lBQ0MsTUFBTU0sUUFBUSxHQUFHeEIsS0FBSztJQUN0QixPQUFPd0IsUUFBUTtDQUNsQjtBQUVNLGVBQWVDLG1CQUFtQixDQUFFQyxPQUFPLEVBQUU7SUFDbEQsSUFBSTtRQUNBLE1BQU1MLElBQUcsR0FBRyxNQUFNTSxLQUFLLENBQUMsQ0FBQyxvQ0FBb0MsQ0FBQyxHQUFHLEdBQUcsR0FBRyxJQUFLQyxlQUFlLENBQUNGLE9BQU8sQ0FBQyxDQUFFRyxRQUFRLEVBQUUsQ0FBQztRQUNqSCxNQUFNOUIsSUFBSSxHQUFHLE1BQU1zQixJQUFHLENBQUNFLElBQUksRUFBRTtRQUM3QlAsT0FBTyxDQUFDQyxHQUFHLENBQUMsY0FBYyxFQUFFbEIsSUFBSSxDQUFDLENBQUM7UUFDbEMsT0FBT0EsSUFBSTtLQUNkLENBQUMsT0FBTytCLEdBQUcsRUFBRTtRQUNWZCxPQUFPLENBQUNDLEdBQUcsQ0FBQyxhQUFhLEVBQUVhLEdBQUcsQ0FBQyxDQUFDO0tBQ25DO0NBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oYW1sZXQvLi91dGlscy9zdXBhYmFzZS5qcz80MDZkIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHV0aWxzL3N1cGFiYXNlLmpzXG5pbXBvcnQgeyBjcmVhdGVDbGllbnQgfSBmcm9tICdAc3VwYWJhc2Uvc3VwYWJhc2UtanMnXG5cbmNvbnN0IHN1cGFiYXNlU2VydmljZUtleSA9IHByb2Nlc3MuZW52LlNVUEFCQVNFX1NFUlZJQ0VfS0VZXG5cbmV4cG9ydCBjb25zdCBzdXBhYmFzZSA9IGNyZWF0ZUNsaWVudChcbiAgICBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19TVVBBQkFTRV9VUkwsXG4gICAgcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfU1VQQUJBU0VfQU5PTl9LRVlcbilcblxuZXhwb3J0IGNvbnN0IGdldFNlcnZpY2VTdXBhYmFzZSA9ICgpID0+IGNyZWF0ZUNsaWVudChcbiAgcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfU1VQQUJBU0VfVVJMLFxuICBzdXBhYmFzZVNlcnZpY2VLZXlcbilcblxuZXhwb3J0IGNvbnN0IGdldE9uYm9hcmRpbmdTdGF0dXMgPSBhc3luYyAodXNlcklkKSA9PiB7XG4gIGNvbnN0IHN1cGFiYXNlID0gZ2V0U3VwYWJhc2UodXNlcklkKVxuICBsZXQgeyBkYXRhOiB1c2VycywgZXJyb3IgfSA9IGF3YWl0IHN1cGFiYXNlXG4gICAgLmZyb20oJ3VzZXJzJylcbiAgICAuc2VsZWN0KCdpc19vbmJvYXJkaW5nJylcbiAgICAuZXEoJ3VzZXJfaWQnLCB1c2VySWQpXG5cbiAgICBjb25zdCBvbmJvYXJkaW5nU3RhdHVzID0gdXNlcnNbMF0uaXNfb25ib2FyZGluZ1xuICAgIFxuICAgIHJldHVybiBvbmJvYXJkaW5nU3RhdHVzXG4gIH1cblxuZXhwb3J0IGNvbnN0IHBvc3RPbmJvYXJkaW5nRGF0YSA9IGFzeW5jICh1c2VySWQsIGZvcm1EYXRhKSA9PiB7XG4gIHRyeSB7XG4gICAgY29uc3Qgc3VwYWJhc2UgPSBnZXRTdXBhYmFzZSh1c2VySWQpXG4gICAgbGV0IHsgZGF0YTogdXNlcnMsIGVycm9yIH0gPSBhd2FpdCBzdXBhYmFzZVxuICAgICAgLmZyb20oJ3VzZXJzJylcbiAgICAgIC51cGRhdGUoXG4gICAgICAgIHtcbiAgICAgICAgICB1c2VyX3R5cGU6IGZvcm1EYXRhLnVzZXJUeXBlLCBcbiAgICAgICAgICBmaXJzdF9uYW1lOiBmb3JtRGF0YS5maXJzdE5hbWUsIFxuICAgICAgICAgIGxhc3RfbmFtZTogZm9ybURhdGEubGFzdE5hbWUsIFxuICAgICAgICAgIGlzX29uYm9hcmRpbmc6IGZhbHNlXG4gICAgICAgIH1cbiAgICAgIClcbiAgICAgIC5lcSgndXNlcl9pZCcsIHVzZXJJZClcbiAgICAgIC5zZWxlY3QoKVxuICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5sb2coZXJyb3IpXG4gICAgICBjb25zdCBlcnJvclN0cmluZyA9IEpTT04uc3RyaW5naWZ5KGVycm9yKVxuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5qc29uKHsgZXJyb3JTdHJpbmcgfSlcbiAgfVxuICAgIGNvbnN0IHJlc3BvbnNlID0gdXNlcnMgXG4gICAgcmV0dXJuIHJlc3BvbnNlXG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBjcmVhdGVSZXNpZGVudEdyb3VwIChyZXF1ZXN0KSB7XG4gIHRyeSB7XG4gICAgICBjb25zdCByZXMgPSBhd2FpdCBmZXRjaChgL2FwaS9zdXBhYmFzZS9yZXNpZGVudC1ncm91cHMvY3JlYXRlYCArICc/JyArIChuZXcgVVJMU2VhcmNoUGFyYW1zKHJlcXVlc3QpKS50b1N0cmluZygpKTtcbiAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXMuanNvbigpO1xuICAgICAgY29uc29sZS5sb2coXCJBUEkgcmVzdWx0OiBcIiwgZGF0YSk7XG4gICAgICByZXR1cm4gZGF0YVxuICB9IGNhdGNoIChlcnIpIHtcbiAgICAgIGNvbnNvbGUubG9nKFwiQVBJIGVycm9yOiBcIiwgZXJyKTtcbiAgfVxufVxuXG5cbiAgIl0sIm5hbWVzIjpbImNyZWF0ZUNsaWVudCIsInN1cGFiYXNlU2VydmljZUtleSIsInByb2Nlc3MiLCJlbnYiLCJTVVBBQkFTRV9TRVJWSUNFX0tFWSIsInN1cGFiYXNlIiwiTkVYVF9QVUJMSUNfU1VQQUJBU0VfVVJMIiwiTkVYVF9QVUJMSUNfU1VQQUJBU0VfQU5PTl9LRVkiLCJnZXRTZXJ2aWNlU3VwYWJhc2UiLCJnZXRPbmJvYXJkaW5nU3RhdHVzIiwidXNlcklkIiwiZ2V0U3VwYWJhc2UiLCJkYXRhIiwidXNlcnMiLCJlcnJvciIsImZyb20iLCJzZWxlY3QiLCJlcSIsIm9uYm9hcmRpbmdTdGF0dXMiLCJpc19vbmJvYXJkaW5nIiwicG9zdE9uYm9hcmRpbmdEYXRhIiwiZm9ybURhdGEiLCJ1cGRhdGUiLCJ1c2VyX3R5cGUiLCJ1c2VyVHlwZSIsImZpcnN0X25hbWUiLCJmaXJzdE5hbWUiLCJsYXN0X25hbWUiLCJsYXN0TmFtZSIsImNvbnNvbGUiLCJsb2ciLCJlcnJvclN0cmluZyIsIkpTT04iLCJzdHJpbmdpZnkiLCJyZXMiLCJzdGF0dXMiLCJqc29uIiwicmVzcG9uc2UiLCJjcmVhdGVSZXNpZGVudEdyb3VwIiwicmVxdWVzdCIsImZldGNoIiwiVVJMU2VhcmNoUGFyYW1zIiwidG9TdHJpbmciLCJlcnIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./utils/supabase.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./pages/api/supabase/profiles/get.js"));
module.exports = __webpack_exports__;

})();